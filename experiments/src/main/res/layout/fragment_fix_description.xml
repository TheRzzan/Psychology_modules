<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="match_parent" xmlns:app="http://schemas.android.com/apk/res-auto"
        android:fitsSystemWindows="false">

    <ScrollView
            android:layout_above="@+id/buttonFixStartTest"
            android:id="@+id/scrollViewFix"
            style="@style/ScrollViewStyle">

        <RelativeLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content">

            <ImageView
                    android:id="@+id/imageFixToolbar"
                    android:layout_width="match_parent"
                    android:layout_height="230dp"
                    android:scaleType="centerCrop"
                    android:fitsSystemWindows="true"
                    android:background="@drawable/image_test_3"
                    app:layout_collapseMode="parallax"
            />

            <TextView
                    android:id="@+id/textFixDescrName"
                    style="@style/TextView.Primary"
                    android:text="Some name"
                    android:layout_marginStart="@dimen/activity_horizontal_margin"
                    android:layout_marginTop="48dp"/>

            <TextView
                    android:id="@+id/textFixDescription"
                    android:layout_below="@+id/imageFixToolbar"
                    style="@style/TextView.Secondary"
                    android:textColor="@android:color/black"
                    android:lineSpacingExtra="8dp"
                    android:text="В данном случае AppBarLayout это синяя view, размещенная под исчезающим изображением, она содержит Toolbar, LinearLayout с заголовком и подзаголовком и TabLayout с несколькими вкладками.

Мы можем управлять поведением элементов AppbarLayout с помощью параметров: layout_scrollFlags. Значение: scroll в данном случае присутствует почти во всех элементах view, если бы этот параметр не был указан ни в одном из элементов AppbarLayout, он остался бы неизменным, позволяя прокручиваемому контенту проходить позади него.

Со значением: snap, мы избегаем попадания в полу-анимационного-состояния, это значит, что анимация всегда скрывает или отображает полный размер view.

LinearLayout который содержит заголовок и подзаголовок будет всегда отображен при прокручивании вверх, (enterAlways значение), и TabLayout будет видим всегда так как на него не установлен ни один флаг.

Как видите настоящая мощь AppbarLayout определяется должным управлением его флагами прокрутки в определенных view.

Посмотреть код
Все эти параметры доступны в документации Google Developers. В любом случае, я рекомендую поиграть с примерами. В конце статьи размещены ссылки на репозитории Github с реализацией примеров.
"
                    android:padding="@dimen/activity_horizontal_margin"
            />
        </RelativeLayout>
    </ScrollView>

    <Button
            android:text="Начать"
            style="@style/TextView.Button"
            android:background="@drawable/rectangle_button"
            android:id="@+id/buttonFixStartTest"
            android:layout_alignParentBottom="true"/>

    <Button
            android:layout_marginTop="@dimen/activity_vertical_margin"
            android:layout_marginEnd="@dimen/activity_horizontal_margin"
            android:id="@+id/buttonFixExit"
            android:layout_alignParentEnd="true"
            android:layout_alignParentTop="true"
            android:background="@drawable/close_icon"
            android:layout_width="26dp"
            android:layout_height="26dp"/>
</RelativeLayout>
